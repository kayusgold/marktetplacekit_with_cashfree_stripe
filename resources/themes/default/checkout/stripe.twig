{% extends "layouts.app" %}
    {% block navbar %}

    {% endblock %}

    {% block footer %}

    {% endblock %}

{% block content %}


    <div class="bg-light border-0 window-height" data-turbolinks="false">



        {{ form_open({'url' : url, 'class':' ', 'id': 'checkout-form'  }) }}

        <div class="container-fluid bg-white mt-0 p-5 border-left border-right" style="height: 100vh; max-width: 480px">
            <div class=" " style="">

                <div class="text-center mb-3">

                    <a href="/" class="navbar-brand text-dark ">
                        {% if not setting('site_logo') %}
                            {{  setting('site_name') }}
                        {% else %}
                            <img src="{{ setting('logo', '../../logo.png') }}" title="{{ setting('site_title') }}" class="logo"/>
                        {% endif %}
                    </a>
                </div>
            <h5><i class="fa fa-lock text-danger " aria-hidden="true"></i> Secure checkout</h5>

            <div class="row mt-4"  >
                <div class="col-sm-12"  >

                    {% include 'notifications' %}

                    <div class="bg-light border-rounded border-0 p-0">

                        <!--Example 3-->
                        <div class="cell example example3" id="example-3">

                                <div class="form-group">
                                    <label for="exampleInputEmail1">Name on card</label>
                                    <input id="example3-name" data-tid="elements_examples.form.name_label" class="cardholder_name field form-control" type="text" placeholder="" required="" autocomplete="name">
                                </div>

                                <div class="form-group">
                                    <label for="exampleInputEmail1">Card number</label>
                                    <div id="example3-card-number" class="field empty form-control"></div>
                                    <small id="cardNumberHelp" class="form-text text-danger"></small>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-8">
                                            <label for="exampleInputEmail1">Card expiry</label>
                                            <div id="example3-card-expiry" class="field empty form-control "></div>
                                            <small id="cardExpiryHelp" class="form-text text-danger"></small>
                                        </div>
                                        <div class="col-4">
                                            <label for="exampleInputEmail1">CVV</label>
                                            <div id="example3-card-cvc" class="field empty form-control"></div>
                                            <small id="cardCvcHelp" class="form-text text-danger"></small>
                                        </div>
                                    </div>
                                </div>

                                <button type="submit" class="btn btn-primary btn-block" data-tid="elements_examples.form.pay_button">Pay {{ format_money(pricing.total, setting('currency')) }}</button>

                                <div class="error" role="alert">
                                    <span class="message"></span></div>

                            <div class="success">
                                <div class="icon">
                                </div>
                                <h3 class="title" data-tid="elements_examples.success.title">Payment successful</h3>
                                <p class="message"><span data-tid="elements_examples.success.message">Note: Payment is taken on the day of the seller acccepts your order not when the order is placed or amended. This form only authorizes payment from you.
 </span></p>
                            </div>

                        </div>

                    </div>

                </div>
            </div>


        {{ form_close() }}

        </div>
    </div>
    </div>
<script>
	function registerElements(elements, exampleName) {
  var formClass = '.' + exampleName;
  var example = document.querySelector(formClass);

  var form = example.querySelector('form');
  var resetButton = example.querySelector('a.reset');
  var error = form.querySelector('.error');
  var errorMessage = error.querySelector('.message');

  function enableInputs() {
    Array.prototype.forEach.call(
      form.querySelectorAll(
        "input[type='text'], input[type='email'], input[type='tel']"
      ),
      function(input) {
        input.removeAttribute('disabled');
      }
    );
  }
  }
    (function() {
        'use strict';

        var elements = stripe.elements({
            fonts: [
                {
                    cssSrc: 'https://fonts.googleapis.com/css?family=Raleway',
                },
            ],
            // Stripe's examples are localized to specific languages, but if
            // you wish to have Elements automatically detect your user's locale,
            // use `locale: 'auto'` instead.
            locale: window.__exampleLocale,
        });

        var elementStyles = {
            base: {
                color: '#000',
                fontWeight: 600,
                fontFamily: 'Raleway',
                fontSize: '15px',
                fontSmoothing: 'antialiased',

                ':focus': {
                    color: '#424770',
                },

                '::placeholder': {
                    color: '#9BACC8',
                },

                ':focus::placeholder': {
                    color: '#CFD7DF',
                },
            },
            invalid: {
                color: '#00',
                ':focus': {
                    color: '#FA755A',
                },
                '::placeholder': {
                    color: '#FFCCA5',
                },
            },
        };

        var elementClasses = {
            focus: 'focus',
            empty: 'empty',
            invalid: 'invalid',
        };

        var cardNumber = elements.create('cardNumber', {
            style: elementStyles,
            classes: elementClasses,
        });
        cardNumber.mount('#example3-card-number');

        var cardExpiry = elements.create('cardExpiry', {
            style: elementStyles,
            classes: elementClasses,
        });
        cardExpiry.mount('#example3-card-expiry');

        var cardCvc = elements.create('cardCvc', {
            style: elementStyles,
            classes: elementClasses,
        });
        cardCvc.mount('#example3-card-cvc');


        cardNumber.addEventListener('change', function(event) {
            document.getElementById('cardNumberHelp').textContent = (event.error)?event.error.message:'';
        });
        cardExpiry.addEventListener('change', function(event) {
            document.getElementById('cardExpiryHelp').textContent = (event.error)?event.error.message:'';
        });
        cardCvc.addEventListener('change', function(event) {
            document.getElementById('cardCvcHelp').textContent = (event.error)?event.error.message:'';
        });

        // Handle form submission.
        var form = document.getElementById('checkout-form');
        form.addEventListener('submit', function(event) {
            event.preventDefault();

            var tokenData = {
                name: $('.cardholder_name').val(),
                currency: '{{ setting('currency') }}',
                address_zip: '{{ auth_user().billing_address.zip }}'
            };
			//console.log(cardNumber);
            stripe.createToken( cardNumber, tokenData ).then(function(result) {
                console.log(result);
                if (result.error) {
                    // Inform the user if there was an error.
                    var errorElement = document.getElementById('card-errors');
                    errorElement.textContent = result.error.message;
                } else {
                    // Send the token to your server.
                    stripeTokenHandler(result.token);
                }
            });
        });

        // Submit the form with the token ID.
        function stripeTokenHandler(token) {
            // Insert the token ID into the form so it gets submitted to the server
            var form = document.getElementById('checkout-form');
            var hiddenInput = document.createElement('input');
            hiddenInput.setAttribute('type', 'text');
            hiddenInput.setAttribute('name', 'stripeToken');
            hiddenInput.setAttribute('value', JSON.stringify(token));
            form.appendChild(hiddenInput);

            // Submit the form
            form.submit();
        }

        //registerElements([cardNumber, cardExpiry, cardCvc], 'example3');
    })();
</script>
<style>
    .example.example3 {
        background-color: #fff;
    }

    .form-control {
        color: '#000';
        font-weight: 600;
        font-family: 'Roboto Mono', sans-serif;
        font-size: '15px';
        font-smoothing: 'antialiased';
    }

    .example.example3 * {


    }

    .example.example3 .fieldset {
        margin: 0 15px 30px;
        padding: 0;
        border-style: none;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-flow: row wrap;
        flex-flow: row wrap;
        -ms-flex-pack: justify;
        justify-content: space-between;
    }

    .example.example3 .field {
        padding: 10px 20px 11px;
        background-color: #fff;
        border-radius: 0px;
        width: 100%;
        border: 1px solid rgba(0, 0, 0, 0.2);
        font-family: 'Roboto Mono', monospace;
    }

    .example.example3 .field.half-width {
        width: calc(50% - (5px / 2));
    }

    .example.example3 .field.third-width {
        width: calc(33% - (5px / 3));
    }

    .example.example3 .field + .field {
        margin-top: 6px;
    }

    .example.example3 .field.focus,
    .example.example3 .field:focus {
        color: #424770;
        background-color: #f6f9fc;
    }

    .example.example3 .field.invalid {
        border-color: #fa755a;
    }

    .example.example3 .field.invalid.focus {
        background-color: #f6f9fc;
    }

    .example.example3 .field.focus::-webkit-input-placeholder,
    .example.example3 .field:focus::-webkit-input-placeholder {
        color: #cfd7df;
    }

    .example.example3 .field.focus::-moz-placeholder,
    .example.example3 .field:focus::-moz-placeholder {
        color: #cfd7df;
    }

    .example.example3 .field.focus:-ms-input-placeholder,
    .example.example3 .field:focus:-ms-input-placeholder {
        color: #cfd7df;
    }

    .example.example3 input, .example.example3 button {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        outline: none;
        border-style: none;
    }

    .example.example3 input {
        color: #000;
    }



    .example.example3 .error svg .base {
        fill: #fa755a;
    }

    .example.example3 .error svg .glyph {
        fill: #fff;
    }

    .example.example3 .error .message {
        color: #fff;
    }

    .example.example3 .success .icon .border {
        stroke: #fcd669;
    }

    .example.example3 .success .icon .checkmark {
        stroke: #fff;
    }

    .example.example3 .success .title {
        color: #fff;
    }

    .example.example3 .success .message {
        color: #9cabc8;
    }

    .example.example3 .success .reset path {
        fill: #fff;
    }
</style>
{% endblock %}
